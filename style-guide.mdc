---
description: 
globs: 
alwaysApply: true
---
# PvP Performance Tracker - Style Guide

This document outlines the coding conventions and style preferences for the PvP Performance Tracker project. Adhering to these guidelines helps maintain code consistency and readability.

## Base Conventions: RuneLite

This project generally follows the official RuneLite code conventions. Key points include:

*   **Indentation:** Use **tabs**, not spaces.
*   **Brace Placement:** Opening curly braces (`{`) **always** go on the **next line** after the statement (class, method, if, loop, etc.).
    ```java
    // Correct
    if (condition)
    {
        // code
    }

    // Incorrect
    if (condition) {
        // code
    }
    ```
*   **Else/Catch/Finally Placement:** These keywords also go on a **new line**.
    ```java
    // Correct
    if (condition)
    {
        // code
    }
    else // Not "cuddly" else
    {
        // code
    }

    try
    {
        // code
    }
    catch (Exception e) // Not "cuddly" catch
    {
        // code
    }
    finally // Not "cuddly" finally
    {
        // code
    }
    ```
*   **Imports:**
    *   Organize imports in a single logical block at the top of the file.
    *   Avoid wildcard imports (`.*`) for classes. Set IntelliJ's `Class count to use import with '*'` to a high number (e.g., 999).
    *   Static wildcard imports (e.g., `import static net.runelite.api.ItemID.*;`) are generally acceptable, especially for enums like `ItemID`. Set IntelliJ's `Names count to use static import with '*'` to a high number (e.g., 999).
    *   Do not let the IDE re-order import statements automatically if it separates static/non-static or breaks logical grouping.
*   **Spacing:** Use a single blank line to separate logical blocks of code (e.g., between methods, before/after class fields).
*   **Copyright Header:** Ensure the standard RuneLite copyright header is present at the beginning of every new `.java` file.

*(Reference: [RuneLite Code Conventions](https://github.com/runelite/runelite/wiki/Code-Conventions))*

## Project-Specific Notes

*   **Brace Placement Emphasis:** As noted above and explicitly required for this project, **always place opening curly braces on the next line**. Avoid "cuddly" `else`, `catch`, and `finally` blocks; place these keywords on their own lines as well. This is consistent with the RuneLite standard but is highlighted here due to its common variation in other Java projects.